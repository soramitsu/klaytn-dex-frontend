/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from "bn.js";
import type { ContractOptions } from "web3-eth-contract";
import type { EventLog } from "web3-core";
import type { EventEmitter } from "events";
import type {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "../types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface FixedPointTest extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): FixedPointTest;
  clone(): FixedPointTest;
  methods: {
    decode(self: [number | string | BN]): NonPayableTransactionObject<string>;

    decode144(
      self: [number | string | BN]
    ): NonPayableTransactionObject<string>;

    divuq(
      self: [number | string | BN],
      other: [number | string | BN]
    ): NonPayableTransactionObject<[string]>;

    encode(x: number | string | BN): NonPayableTransactionObject<[string]>;

    encode144(x: number | string | BN): NonPayableTransactionObject<[string]>;

    fraction(
      numerator: number | string | BN,
      denominator: number | string | BN
    ): NonPayableTransactionObject<[string]>;

    getGasCostOfDivuq(
      self: [number | string | BN],
      other: [number | string | BN]
    ): NonPayableTransactionObject<string>;

    getGasCostOfFraction(
      numerator: number | string | BN,
      denominator: number | string | BN
    ): NonPayableTransactionObject<string>;

    getGasCostOfMuluq(
      self: [number | string | BN],
      other: [number | string | BN]
    ): NonPayableTransactionObject<string>;

    getGasCostOfSqrt(
      self: [number | string | BN]
    ): NonPayableTransactionObject<string>;

    mul(
      self: [number | string | BN],
      y: number | string | BN
    ): NonPayableTransactionObject<[string]>;

    muli(
      self: [number | string | BN],
      y: number | string | BN
    ): NonPayableTransactionObject<string>;

    muluq(
      self: [number | string | BN],
      other: [number | string | BN]
    ): NonPayableTransactionObject<[string]>;

    reciprocal(
      self: [number | string | BN]
    ): NonPayableTransactionObject<[string]>;

    sqrt(self: [number | string | BN]): NonPayableTransactionObject<[string]>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
